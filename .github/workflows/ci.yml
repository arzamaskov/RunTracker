name: CI (PR)

on:
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - "README.md"
      - "CHANGELOG.md"
      - ".github/ISSUE_TEMPLATE/**"

permissions:
  contents: read

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
          extensions: mbstring, intl
      - name: Install deps (no scripts)
        run: composer install --no-interaction --no-progress --prefer-dist --no-scripts --no-plugins
      - name: Pint --test
        run: vendor/bin/pint --test || true

  static-analysis:
    name: static-analysis
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
          extensions: mbstring, intl
          ini-values: memory_limit=-1
      - name: Install deps (no scripts)
        run: composer install --no-interaction --no-progress --prefer-dist --no-scripts --no-plugins
      - name: PHPStan
        run: |
          if [ -x vendor/bin/phpstan ]; then
            vendor/bin/phpstan analyse --no-progress || true
          else
            echo "phpstan not installed, skipping"
          fi

  tests:
    name: tests
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.4
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: run_app_test
          MYSQL_USER: app
          MYSQL_PASSWORD: secret
        ports: [ 3306:3306 ]
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -psecret"
          --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      APP_ENV: testing
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: run_app_test
      DB_USERNAME: app
      DB_PASSWORD: secret

    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"
          extensions: mbstring, intl, redis, pdo_mysql
      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            composer-${{ runner.os }}-
      - name: Composer install
        run: composer install --no-interaction --no-progress --prefer-dist
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
      - name: Install npm dependencies
        run: npm ci
      - name: Build frontend
        run: npm run build
      - name: App key for tests
        run: |
          [ -f .env ] || cp .env.example .env
          php artisan key:generate
      - name: Clear caches
        run: |
          php artisan config:clear
          php artisan route:clear
          php artisan view:clear
          php artisan event:clear
      - name: PHPUnit
        run: php artisan test --colors=always
